---
- name: Check for Python3 and pip in Debian Linux
  apt:
    name:
      - python3
      - python3-pip
    state: present
    when: ansible_facts['os_family'] == "Debian"
# TODO: this task should only run if the OS is Debian based

- name: Install PyMySQL
  pip:
    name: pymysql
    executable: pip3

- name: Install MySQL server
  apt:
    name: mysql-server
    state: present

- name: Start MySQL service
  service:
    name: mysql
    state: started
    enabled: true

- name: Copy update script to the server
  shell: /tmp/rootscript.sh {{ "mysql password has been passed?" }}
# TODO 

- name: Execute the script
# TODO

- name: Output result from script
# TODO

- name: Clean up - remove the script from the remote server
  ansible.builtin.file:
    path: /tmp/rootscript.sh
    state: absent

# TODO

- name: Create MySQL database
  community.mysql.mysql_db:
    name: mysql_database
    state: present
    login_unix_socket: /run/mysqld/mysqld.sock
# TODO

- name: Create MySQL user
  mysql_user:
    login_user: root
    login_password: "{{ mysql_root_password }}"
    name: "{{ mysql_user }}"
    password: "{{ mysql_password }}"
    host: "%"
    priv: "{{ mysql_database }}.*:ALL"
    state: present

- name: Copy SQL file to remote host
  copy:
   src:/home/ubuntu/local/example.db
   dest:/home/ubuntu/remote/example.db
# TODO - this should only be run if mysql_import_data is true

- name: Import SQL data
  command: mysqlimport mysql_database example.db
# TODO

- name: Update MySQL bind-address and mysqlx-bind-address to allow external connections
  
# TODO - this can be done in a single task or broken into two tasks, one per line
# Use notify to restart mysql once complete.

